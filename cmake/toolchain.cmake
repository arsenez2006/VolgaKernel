# Programs
find_program(CMAKE_C_COMPILER "clang" REQUIRED)
find_program(CMAKE_CXX_COMPILER "clang++" REQUIRED)
find_program(CMAKE_LINKER "lld-link" REQUIRED)
find_program(CMAKE_AR "llvm-lib" REQUIRED)

set(CMAKE_C_COMPILER_WORKS TRUE)
set(CMAKE_CXX_COMPILER_WORKS TRUE)
set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE)

# Files suffixes/prefixes
# # Object file extension
set(CMAKE_C_OUTPUT_EXTENSION ".obj" CACHE STRING "" FORCE)
set(CMAKE_CXX_OUTPUT_EXTENSION ".obj" CACHE STRING "" FORCE)

# # Executables
set(CMAKE_EXECUTABLE_SUFFIX_C ".pe" CACHE STRING "" FORCE)
set(CMAKE_EXECUTABLE_SUFFIX_CXX ".pe" CACHE STRING "" FORCE)

# # Static libraries
set(CMAKE_STATIC_LIBRARY_PREFIX_C "" CACHE STRING "" FORCE)
set(CMAKE_STATIC_LIBRARY_SUFFIX_C ".lib" CACHE STRING "" FORCE)

set(CMAKE_STATIC_LIBRARY_PREFIX_CXX "" CACHE STRING "" FORCE)
set(CMAKE_STATIC_LIBRARY_SUFFIX_CXX ".lib" CACHE STRING "" FORCE)

# # Shared libraries
set(CMAKE_SHARED_LIBRARY_PREFIX_C "" CACHE STRING "" FORCE)
set(CMAKE_SHARED_LIBRARY_SUFFIX_C ".dll" CACHE STRING "" FORCE)

set(CMAKE_SHARED_LIBRARY_PREFIX_CXX "" CACHE STRING "" FORCE)
set(CMAKE_SHARED_LIBRARY_SUFFIX_CXX ".dll" CACHE STRING "" FORCE)

# Compile options
list(APPEND COMPILE_OPTIONS
    "-target x86_64-pc-win32"
    "-nostdlib"
)
list(APPEND COMPILE_OPTIONS_SHARED)
string(REPLACE ";" " " COMPILE_OPTIONS "${COMPILE_OPTIONS}")

set(CMAKE_C_FLAGS_INIT ${COMPILE_OPTIONS} CACHE STRING "" FORCE)
set(CMAKE_CXX_FLAGS_INIT ${COMPILE_OPTIONS} CACHE STRING "" FORCE)

# Link options
list(APPEND LINK_FLAGS
    "/machine:x64"
    "/subsystem:native"
    "/base:0x100000"
    "/dynamicbase"
)
string(REPLACE ";" "," LINK_FLAGS "${LINK_FLAGS}")

# # Executable
set(CMAKE_EXE_LINKER_FLAGS_INIT "-fuse-ld=lld -Wl,${LINK_FLAGS}" CACHE STRING "" FORCE)

# # Shared library
set(CMAKE_SHARED_LINKER_FLAGS_INIT "-shared -fuse-ld=lld -Wl,${LINK_FLAGS},/noentry" CACHE STRING "" FORCE)

# Link commands
# # Link executable
set(CMAKE_C_LINK_EXECUTABLE "<CMAKE_C_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>" CACHE STRING "" FORCE)
set(CMAKE_CXX_LINK_EXECUTABLE "<CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>" CACHE STRING "" FORCE)

# # Create static library
set(CMAKE_C_ARCHIVE_CREATE "<CMAKE_AR> /out:<TARGET> /nodefaultlib <OBJECTS>" CACHE STRING "" FORCE)
set(CMAKE_C_ARCHIVE_APPEND "<CMAKE_AR> /out:<TARGET> /nodefaultlib <TARGET> <OBJECTS>" CACHE STRING "" FORCE)
set(CMAKE_C_ARCHIVE_FINISH "" CACHE STRING "" FORCE)

set(CMAKE_CXX_ARCHIVE_CREATE ${CMAKE_C_ARCHIVE_CREATE} CACHE STRING "" FORCE)
set(CMAKE_CXX_ARCHIVE_APPEND ${CMAKE_C_ARCHIVE_APPEND} CACHE STRING "" FORCE)
set(CMAKE_CXX_ARCHIVE_FINISH ${CMAKE_C_ARCHIVE_FINISH} CACHE STRING "" FORCE)

# # Create shared library
set(CMAKE_CXX_CREATE_SHARED_LIBRARY "<CMAKE_CXX_COMPILER> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>" CACHE STRING "" FORCE)
